diff --git a/retroarch.c b/retroarch.c
index f569928..ec7e950 100644
--- a/retroarch.c
+++ b/retroarch.c
@@ -2660,6 +2660,10 @@ bool rarch_main_command(unsigned cmd)
       case RARCH_CMD_QUIT_RETROARCH:
          rarch_main_set_state(RARCH_ACTION_STATE_FORCE_QUIT);
          break;
+      case RARCH_CMD_SHUTDOWN:
+         rarch_main_set_state(RARCH_ACTION_STATE_FORCE_QUIT);
+         system("shutdown -P now");
+         break;
       case RARCH_CMD_RESUME:
          rarch_main_set_state(RARCH_ACTION_STATE_MENU_RUNNING_FINISHED);
          break;
diff --git a/retroarch.h b/retroarch.h
index d1fef79..25c6906 100644
--- a/retroarch.h
+++ b/retroarch.h
@@ -113,6 +113,7 @@ enum basic_event
    RARCH_CMD_RESTART_RETROARCH,
    /* Force-quit RetroArch. */
    RARCH_CMD_QUIT_RETROARCH,
+   RARCH_CMD_SHUTDOWN,
    /* Resume RetroArch when in menu. */
    RARCH_CMD_RESUME,
    /* Toggles pause. */
diff --git a/settings.c b/settings.c
index e87565f..6b6cb7c 100644
--- a/settings.c
+++ b/settings.c
@@ -3319,6 +3319,7 @@ static bool setting_append_list_main_menu_options(
 
    START_GROUP(group_info, "Main Menu");
    START_SUB_GROUP(list, list_info, "State", group_info.name, subgroup_info);
+/*
 #if defined(HAVE_DYNAMIC) || defined(HAVE_LIBRETRO_MANAGEMENT)
    CONFIG_ACTION(
          "core_list",
@@ -3405,7 +3406,8 @@ static bool setting_append_list_main_menu_options(
          "options",
          "Options",
          group_info.name,
-         subgroup_info.name);
+         subgroup_info.name);*/
+
 
    CONFIG_ACTION(
          "settings",
@@ -3422,7 +3424,7 @@ static bool setting_append_list_main_menu_options(
             subgroup_info.name);
       settings_data_list_current_add_flags(list, list_info, SD_FLAG_ADVANCED);
    }
-   if (global->main_is_init && !global->libretro_dummy)
+   /*if (global->main_is_init && !global->libretro_dummy)
    {
       CONFIG_ACTION(
             "savestate",
@@ -3495,19 +3497,26 @@ static bool setting_append_list_main_menu_options(
          "help",
          "Help",
          group_info.name,
-         subgroup_info.name);
+         subgroup_info.name);*/
 
 
 #if !defined(IOS)
    /* Apple rejects iOS apps that lets you forcibly quit an application. */
    CONFIG_ACTION(
          "quit_retroarch",
-         "Quit RetroArch",
+         "Restart RetroArch",
          group_info.name,
          subgroup_info.name);
    settings_list_current_add_cmd(list, list_info, RARCH_CMD_QUIT_RETROARCH);
 #endif
 
+   CONFIG_ACTION(
+         "shutdown",
+         "Shutdown",
+         group_info.name,
+         subgroup_info.name);
+   settings_list_current_add_cmd(list, list_info, RARCH_CMD_SHUTDOWN);
+
    END_SUB_GROUP(list, list_info);
    END_GROUP(list, list_info);
 
@@ -6346,7 +6355,7 @@ rarch_setting_t *setting_new(unsigned mask)
          goto error;
    }
 
-   if (mask & SL_FLAG_OVERLAY_OPTIONS)
+   /*if (mask & SL_FLAG_OVERLAY_OPTIONS)
    {
       if (!setting_append_list_overlay_options(&list, list_info))
          goto error;
@@ -6356,7 +6365,7 @@ rarch_setting_t *setting_new(unsigned mask)
    {
       if (!setting_append_list_osk_overlay_options(&list, list_info))
          goto error;
-   }
+   }*/
 
    if (mask & SL_FLAG_MENU_OPTIONS)
    {
@@ -6364,7 +6373,7 @@ rarch_setting_t *setting_new(unsigned mask)
          goto error;
    }
 
-   if (mask & SL_FLAG_UI_OPTIONS)
+   /*if (mask & SL_FLAG_UI_OPTIONS)
    {
       if (!setting_append_list_ui_options(&list, list_info))
          goto error;
@@ -6388,7 +6397,7 @@ rarch_setting_t *setting_new(unsigned mask)
    {
       if (!setting_append_list_core_updater_options(&list, list_info))
          goto error;
-   }
+   }*/
 
    if (mask & SL_FLAG_NETPLAY_OPTIONS)
    {
@@ -6396,7 +6405,7 @@ rarch_setting_t *setting_new(unsigned mask)
          goto error;
    }
 
-   if (mask & SL_FLAG_ARCHIVE_OPTIONS)
+   /*if (mask & SL_FLAG_ARCHIVE_OPTIONS)
    {
       if (!setting_append_list_archive_options(&list, list_info))
          goto error;
@@ -6406,7 +6415,7 @@ rarch_setting_t *setting_new(unsigned mask)
    {
       if (!setting_append_list_user_options(&list, list_info))
          goto error;
-   }
+   }*/
 
    if (mask & SL_FLAG_PATH_OPTIONS)
    {
@@ -6414,11 +6423,11 @@ rarch_setting_t *setting_new(unsigned mask)
          goto error;
    }
 
-   if (mask & SL_FLAG_PRIVACY_OPTIONS)
+   /*if (mask & SL_FLAG_PRIVACY_OPTIONS)
    {
       if (!setting_append_list_privacy_options(&list, list_info))
          goto error;
-   }
+   }*/
 
    if (!(settings_list_append(&list, list_info, terminator)))
       goto error;
