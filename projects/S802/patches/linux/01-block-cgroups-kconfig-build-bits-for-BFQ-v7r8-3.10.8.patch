From 6423e18c103e28f08e3780ac70df1e30f882651b Mon Sep 17 00:00:00 2001
From: demetris <ierokipides.dem@gmail.com>
Date: Mon, 5 Dec 2016 16:22:35 +0200
Subject: [PATCH] Add bfq config bits

---
 block/Kconfig.iosched         | 32 ++++++++++++++++++++++++++++++++
 block/Makefile                |  1 +
 include/linux/cgroup_subsys.h |  6 ++++++
 3 files changed, 39 insertions(+)

diff --git a/block/Kconfig.iosched b/block/Kconfig.iosched
index 9554af0..3f63365 100644
--- a/block/Kconfig.iosched
+++ b/block/Kconfig.iosched
@@ -39,6 +39,27 @@ config CFQ_GROUP_IOSCHED
 	---help---
 	  Enable group IO scheduling in CFQ.
 
+config IOSCHED_BFQ
+	tristate "BFQ I/O scheduler"
+	default n
+	---help---
+	The BFQ I/O scheduler tries to distribute bandwidth among
+	all processes according to their weights.
+	It aims at distributing the bandwidth as desired, independently of
+	the disk parameters and with any workload. It also tries to
+	guarantee low latency to interactive and soft real-time
+	applications. If compiled built-in (saying Y here), BFQ can
+	be configured to support hierarchical scheduling.
+
+config CGROUP_BFQIO
+	bool "BFQ hierarchical scheduling support"
+	depends on CGROUPS && IOSCHED_BFQ=y
+	default n
+	---help---
+	Enable hierarchical scheduling in BFQ, using the cgroups
+	filesystem interface.  The name of the subsystem will be
+	bfqio.
+
 config IOSCHED_FIOPS
 	tristate "IOPS based I/O scheduler"
 	default y
@@ -81,6 +102,16 @@ choice
 	config DEFAULT_CFQ
 		bool "CFQ" if IOSCHED_CFQ=y
 
+	config DEFAULT_BFQ
+		bool "BFQ" if IOSCHED_BFQ=y
+		help
+		Selects BFQ as the default I/O scheduler which will be
+		used by default for all block devices.
+		The BFQ I/O scheduler aims at distributing the bandwidth
+		as desired, independently of the disk parameters and with
+		any workload. It also tries to guarantee low latency to
+		interactive and soft real-time applications.
+
 	config DEFAULT_FIOPS
 		bool "FIOPS" if IOSCHED_FIOPS=y
 
@@ -103,6 +134,7 @@ config DEFAULT_IOSCHED
 	string
 	default "deadline" if DEFAULT_DEADLINE
 	default "cfq" if DEFAULT_CFQ
+	default "bfq" if DEFAULT_BFQ
 	default "fiops" if DEFAULT_FIOPS
 	default "noop" if DEFAULT_NOOP
 
diff --git a/block/Makefile b/block/Makefile
index c0ef981..724f177 100644
--- a/block/Makefile
+++ b/block/Makefile
@@ -15,6 +15,7 @@ obj-$(CONFIG_BLK_DEV_THROTTLING)	+= blk-throttle.o
 obj-$(CONFIG_IOSCHED_NOOP)	+= noop-iosched.o
 obj-$(CONFIG_IOSCHED_DEADLINE)	+= deadline-iosched.o
 obj-$(CONFIG_IOSCHED_CFQ)	+= cfq-iosched.o
+obj-$(CONFIG_IOSCHED_BFQ)	+= bfq-iosched.o
 obj-$(CONFIG_IOSCHED_FIOPS)	+= fiops-iosched.o
 
 obj-$(CONFIG_BLOCK_COMPAT)	+= compat_ioctl.o
diff --git a/include/linux/cgroup_subsys.h b/include/linux/cgroup_subsys.h
index 6e7ec64..e5e6b0d 100644
--- a/include/linux/cgroup_subsys.h
+++ b/include/linux/cgroup_subsys.h
@@ -84,3 +84,9 @@ SUBSYS(bcache)
 #endif
 
 /* */
+
+#if IS_SUBSYS_ENABLED(CONFIG_CGROUP_BFQIO)
+SUBSYS(bfqio)
+#endif
+
+/* */
-- 
2.7.4

